import tkinter as tk
import tkinter.messagebox as mb


def valid(row, col, num):
    row = int(row)
    col = int(col)
    for i in range(9):
        # Перекрестная проверка
        if board[i][col] == num or board[row][i] == num:
            return False

        # Проверка, есть ли такое же число в "коробке"
        if board[3 * (row // 3) + i // 3][3 * (col // 3) + i % 3] == num:
            return False

    return True


# Хорошо решается рекурсивным перебором
def solve(row, col):
    # Проверка чтобы указатели не выходили за "рамки" судоку
    if row == 9:
        return True
    if col == 9:
        return solve(row + 1, 0)

    # С числами мы ничего поделать не можем, поэтому триггеримся только на "точки"
    if board[row][col] == ".":
        for i in range(1, 10):
            if valid(row, col, str(i)):
                board[row][col] = str(i)
                if solve(row, col + 1):
                    return True
                else:
                    board[row][col] = "."
        return False
    else:
        return solve(row, col + 1)


board = [
    [".","7",".",".",".",".","5",".","3"],
    ["3",".",".","9","1",".",".",".","."],
    [".",".","1",".",".","8","4",".","."],
    [".",".","6","2","7","3",".",".","."],
    ["8",".",".",".",".","4","2","6","."],
    [".",".",".","6",".",".",".",".","."],
    [".",".","9",".",".","2",".","8","5"],
    [".",".",".","3",".",".",".","2","."],
    ["5",".","2",".",".",".",".",".","."],
]
solve(0, 0)
for i in range(9):
    print(board[i])

"""
С помощью этого кода, решил трудное судоку за 1 минуту 29 секунд, в будущем попробую сделать всплывающее окно, где
можно будет, нажимая на кнопки, показывать положение конкретных чисел, что поможет ускорить решение судоку
"""